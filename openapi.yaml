openapi: 3.0.2
info:
  title: RheneAPI
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /loginWorker:
    post:
      summary: Login Worker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Identity'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: string
                description: Token
        '400':
          description: Invalid credentials

  /loginConsumer:
    post:
      summary: Login Consumer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Identity'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: string
                description: Token
        '400':
          description: Invalid credentials

  /registerWorker:
    post:
      summary: Register Worker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Worker'
      responses:
        '200':
          description: Successful registration
        '400':
          description: Registration error

  /registerConsumer:
    post:
      summary: Register Consumer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Consumer'
      responses:
        '200':
          description: Successful registration
        '400':
          description: Registration error

  /myWorkerProfile:
    get:
      summary: Get My Worker Profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
        '401':
          description: Unauthorized

  /myConsumerProfile:
    get:
      summary: Get My Consumer Profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumer'
        '401':
          description: Unauthorized

  /checkProfileConsumer:
    get:
      summary: Check Consumer Profile
      security:
        - bearerAuth: []
      parameters:
        - name: _id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumer'
        '401':
          description: Unauthorized
        '404':
          description: Consumer not found

  /checkProfileWorker:
    get:
      summary: Check Worker Profile
      parameters:
        - name: _id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
        '404':
          description: Worker not found

  /createAppointment:
    post:
      summary: Create Appointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      responses:
        '200':
          description: Appointment created successfully
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '400':
          description: Creation error

  /approveAppointment:
    post:
      summary: Approve Appointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      responses:
        '200':
          description: Appointment approved successfully
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '400':
          description: Approval error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Identity:
      $ref: './schemas/Identity.yaml'
    Consumer:
      $ref: './schemas/Consumer.yaml'
    ConsumerPrivacySettings:
      $ref: './schemas/ConsumerPrivacySettings.yaml'
    ConsumerBillingSettings:
      $ref: './schemas/ConsumerBillingSettings.yaml'
    AppointmentId:
      $ref: './schemas/AppointmentId.yaml'
    ReviewId:
      $ref: './schemas/ReviewId.yaml'
    Review:
      $ref: './schemas/Review.yaml'
    Worker:
      $ref: './schemas/Worker.yaml'
    WorkerBillingSettings:
      $ref: './schemas/WorkerBillingSettings.yaml'
    Appointment:
      $ref: './schemas/Appointment.yaml'
    Approval:
      $ref: './schemas/Approval.yaml'
    Unavailability:
      $ref: './schemas/Unavailability.yaml'
    Services:
      $ref: './schemas/Services.yaml'
    Service:
      $ref: './schemas/Service.yaml'
    Billing:
      $ref: './schemas/Billing.yaml'